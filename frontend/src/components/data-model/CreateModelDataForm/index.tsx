import { useFormik } from "formik";
import { Input, Button } from "@heroui/react";
import {
   autoGeneratedFields,
   generateInitialValues,
   generateValidationSchema,
   getInputType,
} from "./helper";

type Props = {
   columns: any[];
   onSubmit: (values: any, cb: Function) => Promise<void>;
   onCancel: () => void;
   values: any;
};

// Dynamic Form Component
export default function CreateModelDataForm({
   columns,
   onCancel,
   onSubmit,
   values,
}: Props) {
   // Filter out auto-generated fields
   const filteredColumns = columns.filter(
      (col) => !autoGeneratedFields.includes(col.name)
   );

   const formik = useFormik<FormValues>({
      initialValues: generateInitialValues(filteredColumns, values),
      validationSchema: generateValidationSchema(filteredColumns),
      onSubmit: (values, { resetForm }) => {
         console.log("Submitted Values:", values);
         onSubmit(values, () => {
            resetForm();
         });
      },
   });

   return (
      <form onSubmit={formik.handleSubmit} className="space-y-4">
         {filteredColumns.map((field) => (
            <div key={field.name}>
               <Input
                  variant="bordered"
                  label={field.name}
                  type={getInputType(field.type)}
                  name={field.name}
                  value={formik.values[field.name] as string}
                  onChange={formik.handleChange}
                  onBlur={formik.handleBlur}
                  isInvalid={
                     !!formik.errors[field.name] && formik.touched[field.name]
                  }
                  errorMessage={formik.errors[field.name] as string}
                  className="w-full"
                  classNames={{ label: "capitalize" }}
               />
            </div>
         ))}

         <div className="flex justify-end gap-x-4">
            <Button type="button" color="danger" onPress={onCancel}>
               Cancel
            </Button>

            <Button type="submit" color="primary">
               {values ? "Update" : "Create"}
            </Button>
         </div>
      </form>
   );
}
